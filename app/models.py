# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2024-10-07T11:50:15+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field, RootModel, constr


class Email(RootModel[str]):
    root: str = Field(
        ..., description='User email address', examples=['john.smith@example.com']
    )


class User(BaseModel):
    username: Optional[constr(min_length=4)] = Field(
        None, description='User supplied username', examples=['John78']
    )
    firstName: Optional[constr(min_length=1)] = Field(
        None, description='User first name', examples=['John']
    )
    lastName: Optional[constr(min_length=1)] = Field(
        None, description='User last name', examples=['Smith']
    )
    email: Optional[Email] = None


class HealthGetResponse(BaseModel):
    status: Optional[str] = Field(None, examples=['healthy'])


class HealthGetResponse1(BaseModel):
    status: Optional[str] = Field(None, examples=['unhealthy'])
