# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2024-10-07T11:50:15+00:00

from __future__ import annotations
import functools
import io

from fastapi import FastAPI
from fastapi.responses import Response
import yaml
from mangum import Mangum

from .routers import echo, health, user

app = FastAPI(
    version="0.0",
    title="Example",
    termsOfService="https://example.com/terms/",
    contact={"email": "contact@example.com", "url": "http://example.com/contact"},
    license={
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html",
    },
    x_logo={
        "url": "https://psvehla.github.io/openapi-template/logo.png"
    },  # Corrected line
    description="This is an **example** API to demonstrate features of OpenAPI specification\n# Introduction\nThis API definition is intended to to be a good starting point for describing your API in \n[OpenAPI format](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md).\n\n# OpenAPI Specification\nThe goal of The OpenAPI Specification is to define a standard, language-agnostic interface to REST APIs which\nallows both humans and computers to discover and understand the capabilities of the service without access to source\ncode, documentation, or through network traffic inspection. When properly defined via OpenAPI, a consumer can \nunderstand and interact with the remote service with a minimal amount of implementation logic. Similar to what\ninterfaces have done for lower-level programming, OpenAPI removes the guesswork in calling the service.\n",
    servers=[
        {"url": "http://example.com/api/v1"},
        {"url": "https://example.com/api/v1"},
    ],
)

app.include_router(echo.router)
app.include_router(health.router)
app.include_router(user.router)
handler = Mangum(app)


@app.get("/")
async def root():
    """
    Asynchronous function that serves as the root endpoint of the application.

    Returns:
        dict: A dictionary containing a welcome message for the application's gateway.
    """
    return {"message": "Gateway of the App"}


@app.get("/openapi.yaml", include_in_schema=False, response_model=None)
@functools.lru_cache()
def get_openapi_spec_yaml() -> Response:
    """
    Get the OpenAPI spec in YAML format.

    This function reads the OpenAPI specification from a file named "openapi.yaml",
    converts it into a YAML formatted string, and returns it as a Response object
    with the media type set to "text/yaml".

    Returns:
        Response: A Response object containing the OpenAPI spec in YAML format.
    """
    openapi_yaml_str = io.StringIO()

    # the api-first version
    with open("openapi.yaml", "r") as file:
        openapi_yaml = yaml.safe_load_all(file)
        yaml.safe_dump_all(openapi_yaml, openapi_yaml_str, sort_keys=False)
        file.close()

    # the code-first version
    # yaml.dump(app.openapi(), openapi_yaml_str, sort_keys=False)

    return Response(content=openapi_yaml_str.getvalue(), media_type="text/yaml")
